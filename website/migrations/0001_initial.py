# Generated by Django 3.1 on 2020-10-06 03:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid
import website.managers
import website.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=64, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=64, verbose_name='nama depan')),
                ('last_name', models.CharField(max_length=64, verbose_name='nama belakang')),
                ('password', models.CharField(max_length=64, verbose_name='password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', website.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama_file', models.CharField(max_length=64)),
                ('img', models.ImageField(upload_to=website.models.PathAndRename('images/item'))),
            ],
            options={
                'verbose_name_plural': 'gambar',
            },
        ),
        migrations.CreateModel(
            name='JenisItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('jenis', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name_plural': 'jenis item',
            },
        ),
        migrations.CreateModel(
            name='Kategori',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama_kategori', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name_plural': 'kategori',
            },
        ),
        migrations.CreateModel(
            name='Keranjang',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MetodePembayaran',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama_metode', models.CharField(max_length=32)),
                ('deskripsi', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name_plural': 'metode pembayaran',
            },
        ),
        migrations.CreateModel(
            name='Transaksi',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama', models.CharField(max_length=64)),
                ('telepon', models.CharField(max_length=64)),
                ('alamat', models.CharField(max_length=64)),
                ('subtotal', models.IntegerField()),
                ('status_pembayaran', models.IntegerField()),
                ('kodepos', models.CharField(max_length=6)),
                ('id_kota', models.IntegerField()),
                ('id_provinsi', models.IntegerField()),
                ('nama_kota', models.CharField(max_length=32)),
                ('nama_provinsi', models.CharField(max_length=32)),
                ('service', models.CharField(max_length=32)),
                ('ongkos_kirim', models.IntegerField()),
                ('total', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metode_pembayaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.metodepembayaran')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'transaksi',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nama_item', models.CharField(max_length=32)),
                ('harga', models.IntegerField()),
                ('deskripsi', models.TextField()),
                ('jumlah_tersedia', models.IntegerField()),
                ('foto', models.ImageField(upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('jenis_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.jenisitem')),
                ('kategori', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.kategori')),
            ],
            options={
                'verbose_name_plural': 'Item',
            },
        ),
        migrations.CreateModel(
            name='IsiKeranjang',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty', models.IntegerField()),
                ('subtotal', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.item')),
                ('keranjang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.keranjang')),
            ],
        ),
        migrations.CreateModel(
            name='DetailTransaksi',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty', models.IntegerField()),
                ('subtotal', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.item')),
                ('transaksi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.transaksi')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='keranjang',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='website.keranjang'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
